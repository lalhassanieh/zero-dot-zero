{% doc %}
  @prompt
    Create 3 additional FAQ questions and answers that can be added to an existing FAQ section. Include collapsible question/answer format with proper styling to match existing FAQ design.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-faq-container-{{ ai_gen_id }} {
    max-width: 800px;
    margin: 0 auto;
    padding: {{ block.settings.section_padding }}px 20px;
  }

  .ai-faq-item-{{ ai_gen_id }} {
    border-bottom: 1px solid {{ block.settings.border_color }};
    margin-bottom: {{ block.settings.item_spacing }}px;
  }

  .ai-faq-question-{{ ai_gen_id }} {
    width: 100%;
    background: none;
    border: none;
    padding: {{ block.settings.question_padding }}px 0;
    text-align: left;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: {{ block.settings.question_font_size }}px;
    font-weight: {{ block.settings.question_font_weight }};
    color: {{ block.settings.question_color }};
    line-height: 1.4;
    transition: color 0.3s ease;
  }

  .ai-faq-question-{{ ai_gen_id }}:hover {
    color: {{ block.settings.question_hover_color }};
  }

  .ai-faq-question-text-{{ ai_gen_id }} {
    flex-grow: 1;
    margin-right: 16px;
  }

  .ai-faq-icon-{{ ai_gen_id }} {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    transition: transform 0.3s ease;
    color: {{ block.settings.icon_color }};
    flex-shrink: 0;
  }

  .ai-faq-item-{{ ai_gen_id }}.active .ai-faq-icon-{{ ai_gen_id }} {
    transform: rotate(180deg);
  }

  .ai-faq-answer-{{ ai_gen_id }} {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;
    color: {{ block.settings.answer_color }};
    font-size: {{ block.settings.answer_font_size }}px;
    line-height: 1.6;
  }

  .ai-faq-item-{{ ai_gen_id }}.active .ai-faq-answer-{{ ai_gen_id }} {
    max-height: 500px;
    padding-bottom: {{ block.settings.answer_padding }}px;
  }

  .ai-faq-answer-content-{{ ai_gen_id }} {
    padding-right: {{ block.settings.icon_size | plus: 16 }}px;
  }

  @media screen and (max-width: 749px) {
    .ai-faq-question-{{ ai_gen_id }} {
      font-size: {{ block.settings.question_font_size | times: 0.9 }}px;
    }

    .ai-faq-answer-{{ ai_gen_id }} {
      font-size: {{ block.settings.answer_font_size | times: 0.9 }}px;
    }

    .ai-faq-answer-content-{{ ai_gen_id }} {
      padding-right: 0;
    }

    .ai-faq-question-text-{{ ai_gen_id }} {
      margin-right: 12px;
    }
  }
{% endstyle %}

<faq-accordion-{{ ai_gen_id }}
  class="ai-faq-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-faq-item-{{ ai_gen_id }}">
    <button
      class="ai-faq-question-{{ ai_gen_id }}"
      aria-expanded="false"
      aria-controls="faq-answer-1-{{ ai_gen_id }}"
    >
      <span class="ai-faq-question-text-{{ ai_gen_id }}">{{ block.settings.question_1 }}</span>
      <svg
        class="ai-faq-icon-{{ ai_gen_id }}"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <polyline points="6,9 12,15 18,9"></polyline>
      </svg>
    </button>
    <div
      class="ai-faq-answer-{{ ai_gen_id }}"
      id="faq-answer-1-{{ ai_gen_id }}"
    >
      <div class="ai-faq-answer-content-{{ ai_gen_id }}">
        {{ block.settings.answer_1 }}
      </div>
    </div>
  </div>

  <div class="ai-faq-item-{{ ai_gen_id }}">
    <button
      class="ai-faq-question-{{ ai_gen_id }}"
      aria-expanded="false"
      aria-controls="faq-answer-2-{{ ai_gen_id }}"
    >
      <span class="ai-faq-question-text-{{ ai_gen_id }}">{{ block.settings.question_2 }}</span>
      <svg
        class="ai-faq-icon-{{ ai_gen_id }}"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <polyline points="6,9 12,15 18,9"></polyline>
      </svg>
    </button>
    <div
      class="ai-faq-answer-{{ ai_gen_id }}"
      id="faq-answer-2-{{ ai_gen_id }}"
    >
      <div class="ai-faq-answer-content-{{ ai_gen_id }}">
        {{ block.settings.answer_2 }}
      </div>
    </div>
  </div>

  <div class="ai-faq-item-{{ ai_gen_id }}">
    <button
      class="ai-faq-question-{{ ai_gen_id }}"
      aria-expanded="false"
      aria-controls="faq-answer-3-{{ ai_gen_id }}"
    >
      <span class="ai-faq-question-text-{{ ai_gen_id }}">{{ block.settings.question_3 }}</span>
      <svg
        class="ai-faq-icon-{{ ai_gen_id }}"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <polyline points="6,9 12,15 18,9"></polyline>
      </svg>
    </button>
    <div
      class="ai-faq-answer-{{ ai_gen_id }}"
      id="faq-answer-3-{{ ai_gen_id }}"
    >
      <div class="ai-faq-answer-content-{{ ai_gen_id }}">
        {{ block.settings.answer_3 }}
      </div>
    </div>
  </div>
</faq-accordion-{{ ai_gen_id }}>

<script>
  (function() {
    class FAQAccordion{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.questions = this.querySelectorAll('.ai-faq-question-{{ ai_gen_id }}');
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.questions.forEach((question) => {
          question.addEventListener('click', () => {
            const faqItem = question.closest('.ai-faq-item-{{ ai_gen_id }}');
            const isActive = faqItem.classList.contains('active');
            
            if (isActive) {
              this.closeItem(faqItem, question);
            } else {
              this.openItem(faqItem, question);
            }
          });
        });
      }

      openItem(item, question) {
        item.classList.add('active');
        question.setAttribute('aria-expanded', 'true');
      }

      closeItem(item, question) {
        item.classList.remove('active');
        question.setAttribute('aria-expanded', 'false');
      }
    }

    customElements.define('faq-accordion-{{ ai_gen_id }}', FAQAccordion{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "FAQ questions",
  "settings": [
    {
      "type": "header",
      "content": "Questions and answers"
    },
    {
      "type": "text",
      "id": "question_1",
      "label": "Question 1",
      "default": "What is your return policy?"
    },
    {
      "type": "richtext",
      "id": "answer_1",
      "label": "Answer 1",
      "default": "<p>We offer a 30-day return policy for all unused items in their original packaging. Simply contact our customer service team to initiate a return.</p>"
    },
    {
      "type": "text",
      "id": "question_2",
      "label": "Question 2",
      "default": "How long does shipping take?"
    },
    {
      "type": "richtext",
      "id": "answer_2",
      "label": "Answer 2",
      "default": "<p>Standard shipping typically takes 3-7 business days. Express shipping options are available for faster delivery within 1-2 business days.</p>"
    },
    {
      "type": "text",
      "id": "question_3",
      "label": "Question 3",
      "default": "Do you offer international shipping?"
    },
    {
      "type": "richtext",
      "id": "answer_3",
      "label": "Answer 3",
      "default": "<p>Yes, we ship to most countries worldwide. International shipping times vary by location and typically take 7-14 business days. Additional customs fees may apply.</p>"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Item spacing",
      "default": 0
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e5e5e5"
    },
    {
      "type": "header",
      "content": "Questions"
    },
    {
      "type": "range",
      "id": "question_font_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 18
    },
    {
      "type": "select",
      "id": "question_font_weight",
      "label": "Font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "range",
      "id": "question_padding",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "color",
      "id": "question_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "question_hover_color",
      "label": "Hover text color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Answers"
    },
    {
      "type": "range",
      "id": "answer_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "answer_padding",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Bottom padding",
      "default": 20
    },
    {
      "type": "color",
      "id": "answer_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Icon"
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Icon size",
      "default": 20
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon color",
      "default": "#666666"
    }
  ],
  "presets": [
    {
      "name": "FAQ questions"
    }
  ]
}
{% endschema %}